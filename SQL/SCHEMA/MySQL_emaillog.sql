/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			1/15/2018
Description:	Creates the emaillog table and respective stored procedures

*/


USE ayehaadb;



-- ------------------------------------------------------------
-- Drop existing objects
-- ------------------------------------------------------------

DROP TABLE IF EXISTS `ayehaadb`.`emaillog`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_Load`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_LoadAll`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_Add`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_Update`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_Delete`;
DROP PROCEDURE IF EXISTS `ayehaadb`.`usp_emaillog_Search`;


-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `ayehaadb`.`emaillog` (
Id INT AUTO_INCREMENT,
Email VARCHAR(255),
SentDate DATETIME,
EmailTypeId INT,
CONSTRAINT pk_emaillog_Id PRIMARY KEY (Id),
CONSTRAINT fk_emaillog_EmailTypeId_emailtype_Id FOREIGN KEY (EmailTypeId) REFERENCES emailtype (Id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_Load`
(
	 IN paramId INT
)
BEGIN
	SELECT
		`emaillog`.`Id` AS `Id`,
		`emaillog`.`Email` AS `Email`,
		`emaillog`.`SentDate` AS `SentDate`,
		`emaillog`.`EmailTypeId` AS `EmailTypeId`
	FROM `emaillog`
	WHERE 		`emaillog`.`Id` = paramId;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_LoadAll`
()
BEGIN
	SELECT
		`emaillog`.`Id` AS `Id`,
		`emaillog`.`Email` AS `Email`,
		`emaillog`.`SentDate` AS `SentDate`,
		`emaillog`.`EmailTypeId` AS `EmailTypeId`
	FROM `emaillog`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_Add`
(
	 IN paramEmail VARCHAR(255),
	 IN paramSentDate DATETIME,
	 IN paramEmailTypeId INT
)
BEGIN
	INSERT INTO `emaillog` (Email,SentDate,EmailTypeId)
	VALUES (paramEmail, paramSentDate, paramEmailTypeId);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_Update`
(
	IN paramId INT,
	IN paramEmail VARCHAR(255),
	IN paramSentDate DATETIME,
	IN paramEmailTypeId INT
)
BEGIN
	UPDATE `emaillog`
	SET Email = paramEmail
		,SentDate = paramSentDate
		,EmailTypeId = paramEmailTypeId
	WHERE		`emaillog`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_Delete`
(
	IN paramId INT
)
BEGIN
	DELETE FROM `emaillog`
	WHERE		`emaillog`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ayehaadb`.`usp_emaillog_Search`
(
	IN paramId INT,
	IN paramEmail VARCHAR(255),
	IN paramSentDate DATETIME,
	IN paramEmailTypeId INT
)
BEGIN
	SELECT
		`emaillog`.`Id` AS `Id`,
		`emaillog`.`Email` AS `Email`,
		`emaillog`.`SentDate` AS `SentDate`,
		`emaillog`.`EmailTypeId` AS `EmailTypeId`
	FROM `emaillog`
	WHERE
		COALESCE(emaillog.`Id`,0) = COALESCE(paramId,emaillog.`Id`,0)
		AND COALESCE(emaillog.`Email`,'') = COALESCE(paramEmail,emaillog.`Email`,'')
		AND COALESCE(CAST(emaillog.`SentDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramSentDate AS DATE),CAST(emaillog.`SentDate` AS DATE), CAST(NOW() AS DATE))
		AND COALESCE(emaillog.`EmailTypeId`,0) = COALESCE(paramEmailTypeId,emaillog.`EmailTypeId`,0);
END //
DELIMITER ;


